map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
}

# server {
#     listen       80;
#     server_name  calc.0x1.tv; 
#     server_name  calc-sky.0x1.tv; 

#     access_log  /var/log/nginx/calc.access.log  main;
#     error_log   /var/log/nginx/calc.error.log;
    
#     root   /var/data/cocalc-test-root;
#     location / {
#         autoindex on;
#     }

#     error_page  404              /404.html;
#     location = /404.html {
#         root   /usr/share/nginx/html;
#     }

#     # redirect server error pages to the static page /50x.html
#     #
#     error_page   500 502 503 504  /50x.html;
#     location = /50x.html {
#         root   /usr/share/nginx/html;
#     }
 
# }

server {
    listen 443 ssl;

    server_name  {{cocalc_dns}}; 
        
    #These need to be obtained independently for example from https://letsencrypt.org/, by running "certbot certonly" on the docker host after DNS is setup
    ssl_certificate         /etc/letsencrypt/live/cocalc/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/cocalc/privkey.pem;

    client_max_body_size 512M;
    client_body_timeout 300s;
    fastcgi_buffers 64 4K;

    location / {
        # push traffic through the proxy to the port you mapped above, in this case 9090, on the localhost:
        proxy_pass http://127.0.0.1:5000;
        
        # this enables proxying for websockets, which cocalc uses extensively:
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
    }
}


server {
    listen 80;
    server_name  {{cocalc_dns}}; 
    server_tokens off;
    location /.well-known/acme-challenge/ {
        root /var/data/cocalc-test-root;
    }
    location / {
       return 301 https://$host$request_uri;
    }
}
